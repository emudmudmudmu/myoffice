<?php

namespace Proxies\__CG__\Quartet\Bundle\KakarotBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \Quartet\Bundle\KakarotBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setRole(\Quartet\Bundle\KakarotBundle\Entity\Role $role = NULL)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setUpdated($updated)
    {
        $this->__load();
        return parent::setUpdated($updated);
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function setDeleted($deleted)
    {
        $this->__load();
        return parent::setDeleted($deleted);
    }

    public function getDeleted()
    {
        $this->__load();
        return parent::getDeleted();
    }

    public function setUpdateDate()
    {
        $this->__load();
        return parent::setUpdateDate();
    }

    public function addDaySetting(\Quartet\Bundle\KakarotBundle\Entity\DaySetting $daySettings)
    {
        $this->__load();
        return parent::addDaySetting($daySettings);
    }

    public function removeDaySetting(\Quartet\Bundle\KakarotBundle\Entity\DaySetting $daySettings)
    {
        $this->__load();
        return parent::removeDaySetting($daySettings);
    }

    public function getDaySettings()
    {
        $this->__load();
        return parent::getDaySettings();
    }

    public function deleteDaySettings()
    {
        $this->__load();
        return parent::deleteDaySettings();
    }

    public function addCleanSchedule(\Quartet\Bundle\KakarotBundle\Entity\CleanSchedule $cleanSchedules)
    {
        $this->__load();
        return parent::addCleanSchedule($cleanSchedules);
    }

    public function removeCleanSchedule(\Quartet\Bundle\KakarotBundle\Entity\CleanSchedule $cleanSchedules)
    {
        $this->__load();
        return parent::removeCleanSchedule($cleanSchedules);
    }

    public function getCleanSchedules()
    {
        $this->__load();
        return parent::getCleanSchedules();
    }

    public function addLikeSchedule(\Quartet\Bundle\KakarotBundle\Entity\LikeSchedule $likeSchedules)
    {
        $this->__load();
        return parent::addLikeSchedule($likeSchedules);
    }

    public function removeLikeSchedule(\Quartet\Bundle\KakarotBundle\Entity\LikeSchedule $likeSchedules)
    {
        $this->__load();
        return parent::removeLikeSchedule($likeSchedules);
    }

    public function getLikeSchedules()
    {
        $this->__load();
        return parent::getLikeSchedules();
    }

    public function addBlogSchedule(\Quartet\Bundle\KakarotBundle\Entity\BlogSchedule $blogSchedules)
    {
        $this->__load();
        return parent::addBlogSchedule($blogSchedules);
    }

    public function removeBlogSchedule(\Quartet\Bundle\KakarotBundle\Entity\BlogSchedule $blogSchedules)
    {
        $this->__load();
        return parent::removeBlogSchedule($blogSchedules);
    }

    public function getBlogSchedules()
    {
        $this->__load();
        return parent::getBlogSchedules();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setParent($parent)
    {
        $this->__load();
        return parent::setParent($parent);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function setDivision(\Quartet\Bundle\KakarotBundle\Entity\Division $division)
    {
        $this->__load();
        return parent::setDivision($division);
    }

    public function getDivision()
    {
        $this->__load();
        return parent::getDivision();
    }

    public function setPosition(\Quartet\Bundle\KakarotBundle\Entity\Position $position)
    {
        $this->__load();
        return parent::setPosition($position);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function addNotification(\Quartet\Bundle\KakarotBundle\Entity\Notification $notifications)
    {
        $this->__load();
        return parent::addNotification($notifications);
    }

    public function removeNotification(\Quartet\Bundle\KakarotBundle\Entity\Notification $notifications)
    {
        $this->__load();
        return parent::removeNotification($notifications);
    }

    public function getNotifications()
    {
        $this->__load();
        return parent::getNotifications();
    }

    public function addAttendance(\Quartet\Bundle\KakarotBundle\Entity\Attendance $attendances)
    {
        $this->__load();
        return parent::addAttendance($attendances);
    }

    public function removeAttendance(\Quartet\Bundle\KakarotBundle\Entity\Attendance $attendances)
    {
        $this->__load();
        return parent::removeAttendance($attendances);
    }

    public function getAttendances()
    {
        $this->__load();
        return parent::getAttendances();
    }

    public function addExpense(\Quartet\Bundle\KakarotBundle\Entity\Expense $expenses)
    {
        $this->__load();
        return parent::addExpense($expenses);
    }

    public function removeExpense(\Quartet\Bundle\KakarotBundle\Entity\Expense $expenses)
    {
        $this->__load();
        return parent::removeExpense($expenses);
    }

    public function getExpenses()
    {
        $this->__load();
        return parent::getExpenses();
    }

    public function addAuthor(\Quartet\Bundle\KakarotBundle\Entity\PaidHoliday $authors)
    {
        $this->__load();
        return parent::addAuthor($authors);
    }

    public function removeAuthor(\Quartet\Bundle\KakarotBundle\Entity\PaidHoliday $authors)
    {
        $this->__load();
        return parent::removeAuthor($authors);
    }

    public function getAuthors()
    {
        $this->__load();
        return parent::getAuthors();
    }

    public function addApprover(\Quartet\Bundle\KakarotBundle\Entity\PaidHoliday $approvers)
    {
        $this->__load();
        return parent::addApprover($approvers);
    }

    public function removeApprover(\Quartet\Bundle\KakarotBundle\Entity\PaidHoliday $approvers)
    {
        $this->__load();
        return parent::removeApprover($approvers);
    }

    public function getApprovers()
    {
        $this->__load();
        return parent::getApprovers();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function addRole($role)
    {
        $this->__load();
        return parent::addRole($role);
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function unserialize($serialized)
    {
        $this->__load();
        return parent::unserialize($serialized);
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function getUsernameCanonical()
    {
        $this->__load();
        return parent::getUsernameCanonical();
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function getEmailCanonical()
    {
        $this->__load();
        return parent::getEmailCanonical();
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function getPlainPassword()
    {
        $this->__load();
        return parent::getPlainPassword();
    }

    public function getLastLogin()
    {
        $this->__load();
        return parent::getLastLogin();
    }

    public function getConfirmationToken()
    {
        $this->__load();
        return parent::getConfirmationToken();
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function hasRole($role)
    {
        $this->__load();
        return parent::hasRole($role);
    }

    public function isAccountNonExpired()
    {
        $this->__load();
        return parent::isAccountNonExpired();
    }

    public function isAccountNonLocked()
    {
        $this->__load();
        return parent::isAccountNonLocked();
    }

    public function isCredentialsNonExpired()
    {
        $this->__load();
        return parent::isCredentialsNonExpired();
    }

    public function isCredentialsExpired()
    {
        $this->__load();
        return parent::isCredentialsExpired();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function isExpired()
    {
        $this->__load();
        return parent::isExpired();
    }

    public function isLocked()
    {
        $this->__load();
        return parent::isLocked();
    }

    public function isSuperAdmin()
    {
        $this->__load();
        return parent::isSuperAdmin();
    }

    public function isUser(\FOS\UserBundle\Model\UserInterface $user = NULL)
    {
        $this->__load();
        return parent::isUser($user);
    }

    public function removeRole($role)
    {
        $this->__load();
        return parent::removeRole($role);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function setUsernameCanonical($usernameCanonical)
    {
        $this->__load();
        return parent::setUsernameCanonical($usernameCanonical);
    }

    public function setCredentialsExpireAt(\DateTime $date = NULL)
    {
        $this->__load();
        return parent::setCredentialsExpireAt($date);
    }

    public function setCredentialsExpired($boolean)
    {
        $this->__load();
        return parent::setCredentialsExpired($boolean);
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function setEmailCanonical($emailCanonical)
    {
        $this->__load();
        return parent::setEmailCanonical($emailCanonical);
    }

    public function setEnabled($boolean)
    {
        $this->__load();
        return parent::setEnabled($boolean);
    }

    public function setExpired($boolean)
    {
        $this->__load();
        return parent::setExpired($boolean);
    }

    public function setExpiresAt(\DateTime $date = NULL)
    {
        $this->__load();
        return parent::setExpiresAt($date);
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function setSuperAdmin($boolean)
    {
        $this->__load();
        return parent::setSuperAdmin($boolean);
    }

    public function setPlainPassword($password)
    {
        $this->__load();
        return parent::setPlainPassword($password);
    }

    public function setLastLogin(\DateTime $time = NULL)
    {
        $this->__load();
        return parent::setLastLogin($time);
    }

    public function setLocked($boolean)
    {
        $this->__load();
        return parent::setLocked($boolean);
    }

    public function setConfirmationToken($confirmationToken)
    {
        $this->__load();
        return parent::setConfirmationToken($confirmationToken);
    }

    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {
        $this->__load();
        return parent::setPasswordRequestedAt($date);
    }

    public function getPasswordRequestedAt()
    {
        $this->__load();
        return parent::getPasswordRequestedAt();
    }

    public function isPasswordRequestNonExpired($ttl)
    {
        $this->__load();
        return parent::isPasswordRequestNonExpired($ttl);
    }

    public function setRoles(array $roles)
    {
        $this->__load();
        return parent::setRoles($roles);
    }

    public function getGroups()
    {
        $this->__load();
        return parent::getGroups();
    }

    public function getGroupNames()
    {
        $this->__load();
        return parent::getGroupNames();
    }

    public function hasGroup($name)
    {
        $this->__load();
        return parent::hasGroup($name);
    }

    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::addGroup($group);
    }

    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::removeGroup($group);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'lastLogin', 'locked', 'expired', 'expiresAt', 'confirmationToken', 'passwordRequestedAt', 'roles', 'credentialsExpired', 'credentialsExpireAt', 'id', 'name', 'created', 'updated', 'deleted', 'parent', 'role', 'daySettings', 'cleanSchedules', 'likeSchedules', 'blogSchedules', 'division', 'position', 'notifications', 'attendances', 'expenses', 'authors', 'approvers');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}