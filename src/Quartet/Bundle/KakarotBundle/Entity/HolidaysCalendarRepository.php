<?php

namespace Quartet\Bundle\KakarotBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\EntityManager;

/**
 * HolidaysCalendarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HolidaysCalendarRepository extends EntityRepository
{

    /**
     * 指定の年の休日情報を取得する
     * @param $year
     * @return $entities
     */
    public function getHolidays($year)
    {

        $firstDay = $year. '-01-01';
        $lastDay = $year. '-12-31';

        $entities = $this->createQueryBuilder('h')
            ->where('h.date >= :firstDay')
            ->setParameter('firstDay', $firstDay)
            ->andwhere('h.date <= :lastDay')
            ->setParameter('lastDay', $lastDay)
            ->orderby('h.date', 'ASC')
            ->getQuery()
            ->getResult();

        return $entities;
    }

    /**
     * 新規作成時に、登録済みの休日か確認する
     * @param $date
     * @return true: 登録済み, false: 未登録
     */
    public function isNewFindDate(HolidaysCalendar $date)
    {
        return $this->isFindDate($date, 'new');
    }

    /**
     * 編集時に、登録済みの休日か確認する
     * @param $date
     * @return true: 登録済み, false: 未登録
     */
    public function isEditFindDate(HolidaysCalendar $date)
    {
        return $this->isFindDate($date, 'edit');
    }

    /**
     * 登録済みの休日か確認する
     * @param $date
     * @param $type : new or edit
     * @return true: 登録済み, false: 未登録
     */
    private function isFindDate(HolidaysCalendar $date, $type)
    {
        $dateQuery = $this->createQueryBuilder('h')
            ->where('h.date = :date')
            ->setParameter('date', $date->getDate());

        if ('edit' === $type) {
            $dateQuery->andwhere('h.id != :id')
                ->setParameter('id', $date->getId());
        }

        $dateEntity = $dateQuery->getQuery()->getResult();

        if (0 !== count($dateEntity)) {
            return true;
        }

        return false;
    }
}
